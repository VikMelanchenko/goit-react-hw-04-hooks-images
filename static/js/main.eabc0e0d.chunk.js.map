{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","services/Api.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/panda-dribble_4x.webp","components/ImageErrorView/ImageErrorView.jsx","components/FetchImages/FetchImages.jsx","App.js","index.js"],"names":["SearchForm","onSubmit","useState","query","setQuery","className","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","value","placeholder","onChange","target","toLowerCase","Spinner","color","height","width","API","fetchImages","page","URL","fetch","then","response","ok","json","Promise","reject","Error","data","console","log","hits","Button","onClick","modalRoot","document","querySelector","Modal","props","useEffect","handleKeyDown","code","onClose","window","addEventListener","removeEventListener","createPortal","currentTarget","src","alt","ImageGalleryItem","largeImageURL","showModal","setShowModal","toggleModal","ImageGallery","images","map","element","id","webformatURL","tags","ImageFallbackView","message","role","style","textAlign","errorImage","Status","ImageGalleryInfo","setImages","status","setStatus","setError","setPage","fetchImgGallery","newQuery","newImages","prevImages","scrollPageToBottom","length","catch","scrollTo","left","top","body","scrollHeight","behavior","App","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"6PAKe,SAASA,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAAY,EACrBC,mBAAS,IADY,mBACxCC,EADwC,KACjCC,EADiC,KAmB/C,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMJ,SAdW,SAACK,GACpBA,EAAMC,iBAEe,KAAjBJ,EAAMK,QAKVP,EAASE,GACTC,EAAS,KALPK,IAAMC,MAAM,sCAUkBL,UAAU,aAAxC,UACE,wBAAQM,KAAK,SAASN,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVM,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAOX,EACPY,YAAY,2BACZC,SA9Ba,SAACV,GACpBF,EAASE,EAAMW,OAAOH,MAAMI,uB,mCCLjB,SAASC,IAEtB,OACE,cAAC,IAAD,CACEd,UAAU,UACVM,KAAK,YACLS,MAAM,UACNC,OAAQ,GACRC,MAAO,KCIb,IACeC,EADH,CAAEC,YAhBd,SAAqBrB,EAAOsB,GAC1B,IACMC,EAAG,wCADO,qCACP,cAAiDvB,EAAjD,iBAA+DsB,EAA/D,wDACT,OAAOE,MAAMD,GACVE,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,4BAEvBN,MAAK,SAACO,GAEL,OADAC,QAAQC,IAAIF,GACLA,EAAKG,UCTH,SAASC,EAAT,GAA8B,IAAZC,EAAW,EAAXA,QAC/B,OACE,qBAAKnC,UAAU,eAAf,SACE,wBAAQA,UAAU,SAASM,KAAK,SAAS6B,QAASA,EAAlD,yBCAN,IAAMC,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAMC,GAC5BC,qBAAU,WACR,IAAMC,EAAgB,SAACzC,GACF,WAAfA,EAAM0C,MACRH,EAAMI,WAMV,OAFAC,OAAOC,iBAAiB,UAAWJ,GAE5B,kBAAMG,OAAOE,oBAAoB,UAAWL,OASrD,OAAOM,uBACL,qBAAKhD,UAAU,UAAUmC,QAPC,SAAClC,GACvBA,EAAMW,SAAWX,EAAMgD,eACzBT,EAAMI,WAKR,SACE,qBAAK5C,UAAU,QAAf,SACE,qBAAKkD,IAAKV,EAAMU,IAAKC,IAAKX,EAAMW,IAAKlC,MAAO,UAGhDmB,GC3BW,SAASgB,EAAT,GAAwD,IAA5BF,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,IAAKE,EAAiB,EAAjBA,cAAiB,EAClCxD,mBAAS,MADyB,mBAC7DyD,EAD6D,KAClDC,EADkD,KAG9DC,EAAc,WAClBD,GAAa,SAACD,GAAD,OAAgBA,MAG/B,OACE,qBAAItD,UAAU,mBAAmBmC,QAASqB,EAA1C,UACE,qBAAKN,IAAKA,EAAKC,IAAKA,EAAKnD,UAAU,2BAClCsD,GACC,cAACf,EAAD,CAAOK,QAASY,EAAaN,IAAKG,EAAeF,IAAKA,OCZ/C,SAASM,EAAT,GAAmC,IAAXC,EAAU,EAAVA,OACrC,OACE,mCACE,oBAAI1D,UAAU,eAAd,SACG0D,EAAOC,KAAI,SAACC,EAASC,GAAV,OACV,cAACT,EAAD,CACES,GAAIA,EAEJX,IAAKU,EAAQE,aACbT,cAAeO,EAAQP,cACvBF,IAAKS,EAAQG,MAHRH,EAAQC,WCZV,UAA0B,8CCG1B,SAASG,EAAT,GAAyC,IAAZC,EAAW,EAAXA,QAC1C,OACE,sBAAKC,KAAK,QAAQC,MAAO,CAAEC,UAAW,UAAtC,UACGH,EACD,qBACEf,IAAKmB,EACLpD,MAAM,OACNkC,IAAI,cACJgB,MAAO,CAAEC,UAAW,eCA5B,IAAME,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAGG,SAASC,EAAT,GAAsC,IAAVzE,EAAS,EAATA,MAAS,EACtBD,mBAAS,IADa,mBAC3C6D,EAD2C,KACnCc,EADmC,OAEtB3E,mBAASyE,GAFa,mBAE3CG,EAF2C,KAEnCC,EAFmC,OAGxB7E,mBAAS,MAHe,mBAG3CQ,EAH2C,KAGpCsE,EAHoC,OAI1B9E,mBAAS,GAJiB,mBAI3CuB,EAJ2C,KAIrCwD,EAJqC,KAMlDnC,qBAAU,WACH3C,IAGL4E,EAAUJ,GACVO,IACAH,EAAUJ,MACT,CAACxE,EAAOsB,IAEXqB,qBAAU,WACR,IAAmBqC,EACbA,IAAahF,IACf8E,EAAQ,GACRJ,EAAU,OAIb,CAAC1E,IAEJ,IAAM+E,EAAkB,WACtB3D,EAAIC,YAAYrB,EAAOsB,GACpBG,MAAK,SAACwD,GAGL,GAFAP,GAAU,SAACQ,GAAD,4BAAoBA,GAApB,YAAmCD,OAC7CE,IACyB,IAArBF,EAAUG,OACZ,MAAM,IAAIrD,MAAM,8CAGnBsD,OAAM,SAAC9E,GACNsE,EAAStE,GACTqE,EAAUJ,OAIVW,EAAqB,WACZ,IAAT7D,GACFyB,OAAOuC,SAAS,CACdC,KAAM,EACNC,IAAKjD,SAASkD,KAAKC,aACnBC,SAAU,YAShB,OAAIhB,IAAWH,EAEX,qBAAKH,MAAO,CAAEC,UAAW,UAAzB,gEAMAK,IAAWH,EACN,cAACxD,EAAD,IAGL2D,IAAWH,EACN,cAAC,EAAD,CAAgBL,QAAS5D,EAAM4D,UAGpCQ,IAAWH,EAEX,qCACE,cAACb,EAAD,CAAcC,OAAQA,IACH,IAAlBA,EAAOwB,QAAgB,cAAChD,EAAD,CAAQC,QAxBnB,WACjByC,GAAQ,SAACxD,GAAD,OAAUA,EAAO,gBAmB3B,EClFa,SAASsE,IAAO,IAAD,EACF7F,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,KAO5B,OACE,gCACE,cAAC,EAAD,CAAWH,SANU,SAACE,GACxBC,EAASD,MAMP,cAAC,IAAD,CAAgB6F,UAAW,MAC3B,cAAC,EAAD,CAAa7F,MAAOA,OCZ1B8F,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACJ,EAAD,MAEFrD,SAAS0D,eAAe,U","file":"static/js/main.eabc0e0d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport '../css/styles.css';\n\nexport default function SearchForm({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = (event) => {\n    setQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Please enter a valid query string');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={query}\n          placeholder=\"Search images and photos\"\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default function Spinner() {\n  //other logic\n  return (\n    <Loader\n      className=\"spinner\"\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={80}\n      width={80}\n    />\n  );\n}\n","function fetchImages(query, page) {\n  const API_KEY = '19112530-d5af3423794dd47ca2e19dee1';\n  const URL = `https://pixabay.com/api/?&key=${API_KEY}&q=${query}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(URL)\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`Something went wrong`));\n    })\n    .then((data) => {\n      console.log(data);\n      return data.hits;\n    });\n}\n\nconst API = { fetchImages };\nexport default API;\n","import '../css/styles.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <div className=\"load__button\">\n      <button className=\"Button\" type=\"button\" onClick={onClick}>\n        Load More\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nimport '../css/styles.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal(props) {\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.code === 'Escape') {\n        props.onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleBackdropClick = (event) => {\n    if (event.target !== event.currentTarget) {\n      props.onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={props.src} alt={props.alt} width={900}></img>\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  src: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport Modal from '../Modal/Modal';\nimport PropTypes from 'prop-types';\n\nimport '../css/styles.css';\n\nexport default function ImageGalleryItem({ src, alt, largeImageURL }) {\n  const [showModal, setShowModal] = useState(null);\n\n  const toggleModal = () => {\n    setShowModal((showModal) => !showModal);\n  };\n\n  return (\n    <li className=\"ImageGalleryItem\" onClick={toggleModal}>\n      <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\n      {showModal && (\n        <Modal onClose={toggleModal} src={largeImageURL} alt={alt} />\n      )}\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nimport '../css/styles.css';\n\nexport default function ImageGallery({ images }) {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {images.map((element, id) => (\n          <ImageGalleryItem\n            id={id}\n            key={element.id}\n            src={element.webformatURL}\n            largeImageURL={element.largeImageURL}\n            alt={element.tags}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/panda-dribble_4x.13bd5aac.webp\";","import errorImage from '../panda-dribble_4x.webp';\nimport '../css/styles.css';\n\nexport default function ImageFallbackView({ message }) {\n  return (\n    <div role=\"alert\" style={{ textAlign: 'center' }}>\n      {message}\n      <img\n        src={errorImage}\n        width=\"100%\"\n        alt=\"crying girl\"\n        style={{ textAlign: 'center' }}\n      />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Spinner from '../Loader/Loader';\nimport API from '../../services/Api';\nimport Button from '../Button/Button';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport ImageErrorView from '../ImageErrorView/ImageErrorView';\nimport PropTypes from 'prop-types';\n\nimport '../css/styles.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function ImageGalleryInfo({ query }) {\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setStatus(Status.PENDING);\n    fetchImgGallery();\n    setStatus(Status.RESOLVED);\n  }, [query, page]);\n\n  useEffect(() => {\n    const resetPage = (newQuery) => {\n      if (newQuery !== query) {\n        setPage(1);\n        setImages([]);\n      }\n    };\n    resetPage();\n  }, [query]);\n\n  const fetchImgGallery = () => {\n    API.fetchImages(query, page)\n      .then((newImages) => {\n        setImages((prevImages) => [...prevImages, ...newImages]);\n        scrollPageToBottom();\n        if (newImages.length === 0) {\n          throw new Error('Hmm...Nothing here. Try another search.');\n        }\n      })\n      .catch((error) => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  };\n\n  const scrollPageToBottom = () => {\n    if (page !== 1) {\n      window.scrollTo({\n        left: 0,\n        top: document.body.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  const onLoadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  if (status === Status.IDLE) {\n    return (\n      <div style={{ textAlign: 'center' }}>\n        Please enter a search term to begin your search...\n      </div>\n    );\n  }\n\n  if (status === Status.PENDING) {\n    return <Spinner />;\n  }\n\n  if (status === Status.REJECTED) {\n    return <ImageErrorView message={error.message} />;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <ImageGallery images={images} />\n        {images.length !== 0 && <Button onClick={onLoadMore} />}\n      </>\n    );\n  }\n}\n\nImageGalleryInfo.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport FetchImages from './components/FetchImages/FetchImages';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n\n  const handleFormSubmit = (query) => {\n    setQuery(query);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ToastContainer autoClose={3000} />\n      <FetchImages query={query} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}